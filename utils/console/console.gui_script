-- This is not ready to use... obviously
-- Add typed command queue and callback somehow and help
-- Debug dev mode and release mode

function toggle_console(self)
	if self.console_enabled == false then
		self.console_enabled = true
		show_console_assets(self)
	else
		self.console_enabled = false
		hide_console_assets(self)
	end
end

function update_console_text(self)
	self.text = ""
	self.text_queue = self.text_queue or {""}
	
	local text_count = #self.text_queue
	local text_offset = 0
	
	if text_count > self.CONSOLE_MAX_LENGTH then
		text_offset = text_count - self.CONSOLE_MAX_LENGTH
	end
	
	local max_count = 0
	for i,v in ipairs(self.text_queue) do
		max_count = max_count + 1
		if max_count == self.CONSOLE_MAX_LENGTH then break end
		self.text = self.text .. self.text_queue[i + text_offset]
	end

	pprint(self.text_queue)
	gui.set_text(self.node_text,self.text) 
end

function hide_console_assets(self)
	--add_text(self, "  Hide Console\n")
	--update_console_text(self)
	gui.set_enabled(self.node_text,false)
	gui.set_enabled(self.node_box,false)
end

function show_console_assets(self)
	--add_text(self, "  Show Console\n")
	--update_console_text(self)
	gui.set_enabled(self.node_text,true)
	gui.set_enabled(self.node_box,true)	
end

function add_text(self, text)
	local count = #self.text_queue
	self.text_queue[count + 1] = text
	update_console_text(self)
end


function init(self)
	self.text_queue = {}
	self.text_queue[0] = ""
	self.text = ""
	
	self.CONSOLE_MAX_LENGTH = 30
	
	self.sysinfo = sys.get_sys_info()
	
	self.node_text = gui.get_node("text")
	self.node_box = gui.get_node("box")
	
	
	
	add_text(self, sys.get_config("project.title") .. " " .. sys.get_config("project.version") .. " Console\n")

	
	self.console_enabled = false
	hide_console_assets(self)
	gui.set_render_order(15)

	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("add_text") then
		add_text(self, message)
	end
end

function on_input(self, action_id, action)


	if action_id == hash("text") and action.text == "`" then
		toggle_console(self)
	end
	if action_id == hash("key_2") and action.released and false then -- remove and false to test debug
		add_text(self, " test " .. math.random(100) .. "\n")
	end
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
